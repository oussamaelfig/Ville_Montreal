#%RAML 1.0
title: API Contraventions
version: v1
baseUri: http://localhost:5000/api

/api:
  /contrevenants?du=date_debut&au=date_fin:
    get:
      description: Permet d'obtenir la liste des contrevenants ayant commis au moin une infraction entre deux dates spécifiées en paramètre.
      responses:
        200:
          body:
            application/json:
              example: |
                [
                    {
                        "etablissement": "786 HALAL RESTAURANT",
                        "nb_contraventions": 1
                    },
                    {
                        "etablissement": "8449 PROVIGO MONTREAL RACHEL",
                        "nb_contraventions": 1
                    },
                ]

  /infractions_par_etablissement_json:
    get:
      description: Permet d'obtenir d'obtenir la liste des établissements ayant commis une ou plusieurs infractions. Pour chaque établissement, on indique le nombre d'infractions connues. La liste est triée en ordre décroissant du nombre d'infractions en format JSON.
      responses:
        200:
          body:
            application/json:
              example: |
                [
                    {
                        "etablissement": "RESTAURANT BASHA",
                        "nb_infractions": 33
                    },
                    {
                        "etablissement": "DOUBLE PIZZA",
                        "nb_infractions": 30
                    },
                ]

  /infractions_par_etablissement_xml:
    get:
      description: Permet d'obtenir d'obtenir la liste des établissements ayant commis une ou plusieurs infractions. Pour chaque établissement, on indique le nombre d'infractions connues. La liste est triée en ordre décroissant du nombre d'infractions en format XML
      responses:
        200:
          body:
            application/json:
              example: |
                <etablissements>
                    <etablissement nb_infractions="33">RESTAURANT BASHA</etablissement>
                    <etablissement nb_infractions="30">DOUBLE PIZZA</etablissement>
                    <etablissement nb_infractions="26">BUFFALO BILL WINGS</etablissement>
                </etablissements>

  /infractions_par_etablissement_csv:
    get:
      description: Permet d'obtenir d'obtenir la liste des établissements ayant commis une ou plusieurs infractions. Pour chaque établissement, on indique le nombre d'infractions connues. La liste est triée en ordre décroissant du nombre d'infractions en format CSV
      responses:
        200:
          body:
            application/json:
              example: |
                Etablissement,Nombre d'infractions
                RESTAURANT BASHA,33
                DOUBLE PIZZA,30
                BUFFALO BILL WINGS,26

  /utilisateurs:
    post:
      description: Permettre à un utilisateur de se créer un profil d'utilisateur.
      body:
        application/json:
          schema: |
            {
              "type": "object",
              "properties": {
                "nom_complet": {"type": "string"},
                "email": {"type": "string", "format": "email"},
                "etablissements_surveilles": {"type": "array", "items": {"type": "string"}},
                "mot_de_passe": {"type": "string", "minLength": 8}
              },
              "required": ["nom_complet", "email", "mot_de_passe"]
            }
          example: |
            {
              "nom_complet": "Tyrell Wellick",
              "email": "tyrell.wellick@example.com",
              "etablissements_surveilles": ["Etablissement A", "Etablissement B"],
              "mot_de_passe": "password123"
            }
      responses:
        201:
          body:
            application/json:
              example: |
                {
                  "message": "Utilisateur créé avec succès"
                }
        400:
          body:
            application/json:
              example: |
                {
                  "erreur": "L'adresse e-mail est déjà utilisée"
                }
  /inspection:
    post:
      description: Permet de faire une demande d'inspection à la ville pour un établissement.
      body:
        application/json:
          schema: |
            {
              "type": "object",
              "properties": {
                "nom_etablissement": {"type": "string"},
                "adresse": {"type": "string"},
                "ville": {"type": "string"},
                "date_visite": {"type": "string", "format": "date"},
                "nom_client": {"type": "string"},
                "description_probleme": {"type": "string"}
              },
              "required": ["nom_etablissement", "adresse", "ville", "date_visite", "nom_client", "description_probleme"]
            }
          example: |
            {
              "nom_etablissement": "Restaurant BASHA",
              "adresse": "123 Rue Principale",
              "ville": "Montréal",
              "date_visite": "2023-03-29",
              "nom_client": "Oussama Elfigha",
              "description_probleme": "J'ai trouvé des insectes dans mon plat."
            }
      responses:
        201:
          body:
            application/json:
              example: |
                {
                  "message": "Demande d'inspection soumise avec succès"
                }
        400:
          body:
            application/json:
              example: |
                {
                  "erreur": "Les données fournies sont invalides"
                }
